{"version":3,"file":"static/js/865.4665678c.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/initialState.js","components/LoginForm/fields.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","shared/components/TextField/TextField.styled.js","shared/components/TextField/Textfield.jsx","shared/hooks/useForm.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\ncolor: black;\npadding: 30px 15px 20px;\nborder-top: 1px solid maroon;\nborder-bottom: 1px solid maroon;\n`;\n\nexport const Title = styled.h1`\nmargin: 5px;\ntext-align: center;\ntext-transform: uppercase;\ncolor: black;\n`;\n\nexport const Text = styled.p`\ntext-align: center;\ntext-transform: uppercase;\ncolor: black;\n`;\n\nexport const Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: start;\nwidth: 350px;\nmin-height: 20vh;\nmargin: 10vh auto;\npadding: 20px;\nborder-width: 10px 0 10px 0;\nborder-color: maroon;\nborder-style: solid;\nbackground-color: #fff;\n`;\n\nexport const Button = styled.button`\nmargin: 0 auto;\nheight: 25px;\nwidth: 100px;\nborder: 0.3px solid black;\nborder-radius: 20px;\nbox-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\ncursor: pointer;\ntransform: scale(1);\ntransition: transform 250ms, background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1), color 500ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 500ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\n  background-color: maroon;\n  color: white;\n  transform: scale(0.95);\n  transition: transform 250ms;\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\n}\n`;\n\nexport const ButtonLink = styled.button`\n/* margin: 15px auto 0; */\nmargin: 0 15px 0;\nheight: 40px;\nwidth: 70px;\n/* font-size: 10px; */\n/* border: 0.3px solid black; */\n/* border-radius: 50%; */\nbox-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\ncursor: pointer;\ntransform: scale(1);\ntransition: transform 250ms, background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1), color 500ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 500ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\n  background-color: maroon;\n  color: white;\n  transform: scale(0.95);\n  transition: transform 250ms;\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\n}\n`;\n\nexport const Wrap = styled.div`\ndisplay: flex;\n/* justify-content: center; */\nalign-items: center;\n`;\n\n","export const initialState = {\n    email: \"\",\n    password: \"\"\n}","export const fields = {\n    email: {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Input email\",\n        required: true,\n    },\n    password: {\n        label: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Input password\",\n        required: true,\n    },\n}","import useForm from '../../shared/hooks/useForm';\nimport {\n  Button,\n  Form,\n  Wrapper,\n  Title,\n  Text,\n  Wrap,\n  ButtonLink,\n} from './LoginForm.styled';\nimport TextField from '../../shared/components/TextField';\nimport { initialState } from './initialState';\nimport { fields } from './fields';\nimport { Link } from 'react-router-dom';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    onSubmit,\n    initialState,\n  });\n\n  const { email, password } = state;\n\n  return (\n    <Wrapper>\n      <Wrap>\n        <ButtonLink>\n          <Link to={'/register'}>Register</Link>\n        </ButtonLink>\n        <Title>Phonebook</Title>\n      </Wrap>\n      <Text>Log in to work with the phonebook</Text>\n      <Form onSubmit={handleSubmit}>\n        <TextField value={email} onChange={handleChange} {...fields.email} />\n        <TextField\n          value={password}\n          onChange={handleChange}\n          {...fields.password}\n        />\n        <Wrap>\n          <Button type=\"submit\">Login</Button>\n        </Wrap>\n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport useAuth from '../../shared/hooks/useAuth';\n\nimport { login } from '../../redux/auth/auth-operations';\n\nimport LoginForm from '../../components/LoginForm';\n\nconst LoginPage = () => {\n  const isLogin = useAuth();\n\n  const dispatch = useDispatch();\n\n  const onLogin = data => {\n    dispatch(login(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <>\n      <LoginForm onSubmit={onLogin} />\n    </>\n  );\n};\n\nexport default LoginPage;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\ncolor: black;\npadding: 30px 15px 20px;\nborder-top: 1px solid maroon;\nborder-bottom: 1px solid maroon;\n`;\n\nexport const Input = styled.input`\ndisplay: flex;\njustify-content: center;\nwidth: 300px;\nmargin: 0 auto 15px;\npadding: 10px 0 10px 20px;\nheight: 20px;\nbackground-color: floralwhite;\nborder: 1px solid black;\nborder-radius: 0 30px 30px 30px;\nbox-shadow: rgba(0, 0, 0, 0.15) 0px 2px 8px;\n`;\n\nexport const Label = styled.label`\ndisplay: inline-block;\nmargin: 0;\npadding: 5px 0 1px 10px;\nborder-color: black;\nborder-style: solid;\nborder-width: 0 0 0 2px;\nborder-radius: 20px 20px 0 0;\nfont-size: 14px;\n`;\n\nexport const Button = styled.button`\nmargin: 0 auto;\nheight: 25px;\nwidth: 100px;\nborder: 0.3px solid black;\nborder-radius: 20px;\nbox-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\ncursor: pointer;\ntransform: scale(1);\ntransition: transform 250ms, background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1), color 500ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 500ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\n  background-color: maroon;\n  color: white;\n  transform: scale(0.95);\n  transition: transform 500ms;\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\n}\n`;\n\nexport const Field = styled.div`\nmargin: 0;\n`;\n","import { useMemo } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { Input, Label } from './TextField.styled';\n\nconst TextField = ({\n  label,\n  name,\n  value,\n  onChange,\n  placeholder,\n  required,\n  type,\n}) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div>\n      {label && <Label htmlFor={id}>{label}: </Label>}\n      <Input\n        id={id}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={required}\n        type={type}\n      />\n    </div>\n  );\n};\n\nexport default TextField;\n\nTextField.defaultProps = {\n  type: 'text',\n  required: false,\n};\n","import {useState} from \"react\";\n\nconst useForm = ({onSubmit, initialState, isReset = true}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const { name, value, type, checked } = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        if(isReset) {\n            setState({...initialState})\n        }\n    };\n\n    return {state, setState, handleChange, handleSubmit};\n}\n\nexport default useForm;\n"],"names":["Form","styled","Title","Text","Wrapper","Button","ButtonLink","Wrap","initialState","email","password","fields","label","name","type","placeholder","required","onSubmit","useForm","state","handleChange","handleSubmit","to","TextField","value","onChange","isLogin","useAuth","dispatch","useDispatch","data","login","Input","Label","id","useMemo","nanoid","htmlFor","defaultProps","isReset","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}