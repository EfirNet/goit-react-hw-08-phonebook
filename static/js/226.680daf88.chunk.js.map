{"version":3,"file":"static/js/226.680daf88.chunk.js","mappings":"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","sources":["components/Phonebook/ContactList/ContactList.styled.js","components/Phonebook/ContactList/ContactList.jsx","components/Phonebook/Filter/Filter.styled.js","components/Phonebook/Filter/Filter.jsx","components/Phonebook/ContactForm/ContactForm.styled.js","components/Phonebook/ContactForm/initialState.js","components/Phonebook/ContactForm/ContactForm.jsx","components/Phonebook/Phonebook.styled.js","modules/UserMenu/UserMenu.styled.js","modules/UserMenu/UserMenu.jsx","redux/contacts/contacts-selectors.js","components/Phonebook/Phonebook.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Li = styled.li`\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nmargin-bottom: 10px;\npadding: 0 10px 2px;\nletter-spacing: .2rem;\nborder-width: 0 0 1px 0;\nborder-style: dotted;\nborder-color: maroon;\n`;\n\nexport const Ul = styled.ul`\npadding: 0;\nmargin: 20px 20px 0 20px;\nlist-style: none;\n`;\n\nexport const Button = styled.button`\nmargin: 0;\nheight: 25px;\nwidth: 70px;\nborder: 0.3px solid black;\nborder-radius: 20px;\nbox-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\ncursor: pointer;\ntransform: scale(1);\ntransition: transform 250ms, background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1), color 500ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 500ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\n  background-color: maroon;\n  color: white;\n  transform: scale(0.95);\n  transition: transform 500ms;\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\n}\n`;\n\nexport const Name = styled.span`\nmargin-bottom: 5px;\nfont-size: 18px;\nfont-weight: 700;\n`;\n\nexport const Number = styled.span`\nmargin-bottom: 5px;\nfont-size: 16px;\nfont-weight: 500;\n`;\n","import { Li, Ul, Button, Name, Number } from './ContactList.styled';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  const elements = contacts.map(item => (\n    <Li key={item.id}>\n      <Name>{item.name}:</Name>\n      <Number>{item.number}</Number>\n      <Button onClick={() => deleteContact(item.id)}>Delete</Button>\n    </Li>\n  ));\n\n  return <Ul>{elements}</Ul>;\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\ndisplay: inline-block;\nmargin: 0 14px 0;\npadding: 5px 0 1px 10px;\nborder-color: black;\nborder-style: solid;\nborder-width: 0 0 0 2px;\nborder-radius: 20px 20px 0 0;\nfont-size: 14px;\n`;\n\nexport const Input = styled.input`\nwidth: 300px;\nmargin: 0 auto 15px;\npadding: 10px 0 10px 20px;\nheight: 20px;\nbackground-color: floralwhite;\nborder: 1px solid black;\nborder-radius: 0 30px 30px 30px;\nbox-shadow: rgba(0, 0, 0, 0.15) 0px 2px 8px;\n`;\n","import { memo } from 'react';\n\nimport { Input, Label } from './Filter.styled';\n\nconst Filter = ({ filter, handleChange }) => {\n  return (\n    <>\n      <Label>Find contacts by name</Label>\n      <Input\n        value={filter}\n        name=\"filter\"\n        onChange={handleChange}\n        type=\"text\"\n        placeholder=\"Contact search...\"\n      />\n    </>\n  );\n};\n\nexport default memo(Filter);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\ncolor: black;\npadding: 30px 15px 20px;\nborder-top: 1px solid maroon;\nborder-bottom: 1px solid maroon;\n`;\n\nexport const Input = styled.input`\ndisplay: flex;\njustify-content: center;\nwidth: 300px;\nmargin: 0 auto 15px;\npadding: 10px 0 10px 20px;\nheight: 20px;\nbackground-color: floralwhite;\nborder: 1px solid black;\nborder-radius: 0 30px 30px 30px;\nbox-shadow: rgba(0, 0, 0, 0.15) 0px 2px 8px;\n`;\n\nexport const Label = styled.label`\ndisplay: inline-block;\nmargin: 0;\npadding: 5px 0 1px 10px;\nborder-color: black;\nborder-style: solid;\nborder-width: 0 0 0 2px;\nborder-radius: 20px 20px 0 0;\nfont-size: 14px;\n`;\n\nexport const Button = styled.button`\nmargin: 0 auto;\nheight: 25px;\nwidth: 100px;\nborder: 0.3px solid black;\nborder-radius: 20px;\nbox-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\ncursor: pointer;\ntransform: scale(1);\ntransition: transform 250ms, background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1), color 500ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 500ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\n  background-color: maroon;\n  color: white;\n  transform: scale(0.95);\n  transition: transform 500ms;\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\n}\n`;\n\nexport const Field = styled.div`\nmargin: 0;\n`;\n","export const initialState = {\n  name: \"\",\n  number: \"\"\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Label, Button } from './ContactForm.styled';\nimport { initialState } from './initialState';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [form, setForm] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setForm(prevForm => ({\n      ...prevForm,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...form });\n    setForm({ ...initialState });\n  };\n\n  const { name, number } = form;\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit} autoComplete=\"on\">\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter your name ...\"\n          onChange={handleChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <Label htmlFor=\"phone\">Number</Label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number ...\"\n          onChange={handleChange}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: start;\nwidth: 350px;\nmin-height: 80vh;\nmargin: 30px auto 30px;\npadding: 20px;\nborder-width: 10px 0 10px 0;\nborder-color: maroon;\nborder-style: solid;\nbackground-color: #fff;\n`;\n\nexport const Title = styled.h1`\ntext-align: center;\ntext-transform: uppercase;\ncolor: black;\n`;\n\nexport const SubTitle = styled.h2`\ntext-align: center;\ntext-transform: uppercase;\ncolor: black;\n`;\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\nmargin: 3px;\ntext-transform: lowercase;\ncolor: black;\n`;\n\nexport const Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\npadding-bottom: 15px;\nborder-bottom: 1px solid maroon;\n`;\n\nexport const Button = styled.button`\nheight: 25px;\nwidth: 100px;\nborder: 0.3px solid black;\nborder-radius: 20px;\nbox-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\ncursor: pointer;\ntransform: scale(1);\ntransition: transform 250ms, background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1), color 500ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 500ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\n  background-color: maroon;\n  color: white;\n  transform: scale(0.95);\n  transition: transform 500ms;\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\n}\n`;\n\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getUser } from '../../redux/auth/auth-selectors';\nimport { logout } from '../../redux/auth/auth-operations';\nimport { Button, Wrapper, Text } from './UserMenu.styled.js';\n\nconst UserMenu = () => {\n  const { email } = useSelector(getUser);\n  const dispatch = useDispatch();\n\n  const onLogout = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <Wrapper>\n      <Text>{email}</Text>\n      <Button onClick={onLogout}>Logout</Button>\n    </Wrapper>\n  );\n};\n\nexport default UserMenu;\n","export const getIsLoading = ({ contacts }) => contacts.isLoading;\nexport const getError = ({ contacts }) => contacts.error;\nexport const getContacts = ({ contacts }) => contacts.items;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport ContactForm from './ContactForm';\nimport { Title, SubTitle, Wrapper } from './Phonebook.styled';\nimport UserMenu from '../../modules/UserMenu';\nimport {\n  getContacts,\n  getError,\n  getIsLoading,\n} from '../../redux/contacts/contacts-selectors';\n\nimport * as operations from '../../redux/contacts/contacts-operations';\n\nconst Phonebook = () => {\n  const contacts = useSelector(getContacts, shallowEqual);\n  const isLoading = useSelector(getIsLoading, shallowEqual);\n  const error = useSelector(getError, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  const [filter, setFilter] = useState('');\n\n  const addContact = data => {\n    dispatch(operations.addContact(data));\n  };\n\n  const deleteContact = id => {\n    dispatch(operations.deleteContact(id));\n  };\n\n  const changeFilter = useCallback(({ target }) => setFilter(target.value), []);\n\n  const getFilteredContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n    const filterStr = filter.toLowerCase();\n    const result = contacts.filter(item => {\n      const name = item.name.toLowerCase();\n      return name.includes(filterStr);\n    });\n    return result;\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <>\n      <Wrapper>\n        <UserMenu />\n        <Title>Phonebook</Title>\n        <ContactForm onSubmit={addContact} />\n        <SubTitle>Contacts</SubTitle>\n        <Filter filter={filter} handleChange={changeFilter} />\n        {isLoading && <p>...Loading</p>}\n        {error && <p>{error.message}</p>}\n        {Boolean(filteredContacts.length) && (\n          <ContactList\n            contacts={filteredContacts}\n            deleteContact={deleteContact}\n          />\n        )}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from '../../components/Phonebook';\n\nconst PhonebookPage = () => {\n  return (\n    <>\n      <Phonebook />\n    </>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["Li","styled","Ul","Button","Name","Number","contacts","deleteContact","elements","map","item","name","number","onClick","id","Label","Input","Filter","filter","handleChange","value","onChange","type","placeholder","memo","Form","initialState","onSubmit","useState","form","setForm","target","prevForm","e","preventDefault","autoComplete","htmlFor","pattern","title","required","Wrapper","Title","SubTitle","Text","email","useSelector","getUser","dispatch","useDispatch","logout","getIsLoading","isLoading","getError","error","getContacts","items","shallowEqual","useEffect","operations","setFilter","changeFilter","useCallback","filteredContacts","filterStr","toLowerCase","includes","getFilteredContacts","data","message","Boolean","length"],"sourceRoot":""}